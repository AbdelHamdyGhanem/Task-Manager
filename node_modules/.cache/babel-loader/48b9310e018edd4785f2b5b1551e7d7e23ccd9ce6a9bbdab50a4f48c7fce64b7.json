{"ast":null,"code":"var _jsxFileName = \"/Users/abdelghanem/Desktop/task-manager/src/components/History.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc, setDoc, getDoc } from 'firebase/firestore';\nimport './History.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = ({\n  onRestoreTask\n}) => {\n  _s();\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, 'deletedTasks'), orderBy('deletedAt', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDeletedTasks(fetchedTasks);\n    }, error => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleRestoreTask = async taskId => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      const taskSnapshot = await getDoc(taskRef);\n      if (taskSnapshot.exists()) {\n        const taskData = taskSnapshot.data();\n        const newTaskRef = doc(db, 'tasks', taskId);\n        await setDoc(newTaskRef, {\n          ...taskData,\n          status: 'active'\n        });\n        await deleteDoc(taskRef);\n        console.log('Restored task with ID:', taskId);\n\n        // Call the onRestoreTask prop function to update tasks in Home component\n        onRestoreTask({\n          id: taskId,\n          ...taskData\n        });\n      } else {\n        console.error('Task not found in deletedTasks collection:', taskId);\n      }\n    } catch (error) {\n      console.error('Error restoring task:', error);\n    }\n  };\n  const handlePermanentlyDeleteTask = async taskId => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      await deleteDoc(taskRef);\n      console.log('Permanently deleted task with ID:', taskId);\n      // Optionally, show animation or message (not implemented here)\n    } catch (error) {\n      console.error('Error permanently deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deleted Tasks History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-list\",\n      children: deletedTasks.length > 0 ? deletedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Task Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 18\n          }, this), \" \", task.taskName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 18\n          }, this), \" \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Deleted At:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 18\n          }, this), \" \", task.deletedAt ? new Date(task.deletedAt.seconds * 1000).toLocaleString() : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"history-btn restore-btn\",\n            onClick: () => handleRestoreTask(task.id),\n            children: \"Restore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"history-btn delete-btn\",\n            onClick: () => handlePermanentlyDeleteTask(task.id),\n            children: \"Permanently Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No deleted tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"o9bkqHg/cyUcSifiYhrt79l2yCQ=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","query","orderBy","onSnapshot","deleteDoc","doc","setDoc","getDoc","jsxDEV","_jsxDEV","History","onRestoreTask","_s","deletedTasks","setDeletedTasks","q","unsubscribe","snapshot","fetchedTasks","docs","map","id","data","error","console","handleRestoreTask","taskId","taskRef","taskSnapshot","exists","taskData","newTaskRef","status","log","handlePermanentlyDeleteTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","task","taskName","description","deletedAt","Date","seconds","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["/Users/abdelghanem/Desktop/task-manager/src/components/History.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc, setDoc, getDoc } from 'firebase/firestore';\nimport './History.css';\n\nconst History = ({ onRestoreTask }) => {\n  const [deletedTasks, setDeletedTasks] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(db, 'deletedTasks'),\n      orderBy('deletedAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setDeletedTasks(fetchedTasks);\n    }, (error) => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleRestoreTask = async (taskId) => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      const taskSnapshot = await getDoc(taskRef);\n\n      if (taskSnapshot.exists()) {\n        const taskData = taskSnapshot.data();\n        const newTaskRef = doc(db, 'tasks', taskId);\n        await setDoc(newTaskRef, {\n          ...taskData,\n          status: 'active',\n        });\n\n        await deleteDoc(taskRef);\n        console.log('Restored task with ID:', taskId);\n\n        // Call the onRestoreTask prop function to update tasks in Home component\n        onRestoreTask({ id: taskId, ...taskData });\n      } else {\n        console.error('Task not found in deletedTasks collection:', taskId);\n      }\n    } catch (error) {\n      console.error('Error restoring task:', error);\n    }\n  };\n\n  const handlePermanentlyDeleteTask = async (taskId) => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      await deleteDoc(taskRef);\n      console.log('Permanently deleted task with ID:', taskId);\n      // Optionally, show animation or message (not implemented here)\n    } catch (error) {\n      console.error('Error permanently deleting task:', error);\n    }\n  };\n\n  return (\n    <div className=\"history-container\">\n      <h2>Deleted Tasks History</h2>\n      <div className=\"history-list\">\n        {deletedTasks.length > 0 ? (\n          deletedTasks.map(task => (\n            <div key={task.id} className=\"history-item\">\n              <p><strong>Task Name:</strong> {task.taskName}</p>\n              <p><strong>Description:</strong> {task.description}</p>\n              <p><strong>Deleted At:</strong> {task.deletedAt ? new Date(task.deletedAt.seconds * 1000).toLocaleString() : 'Unknown'}</p>\n              <div className=\"btn-container\">\n                <button className=\"history-btn restore-btn\" onClick={() => handleRestoreTask(task.id)}>Restore</button>\n                <button className=\"history-btn delete-btn\" onClick={() => handlePermanentlyDeleteTask(task.id)}>Permanently Delete</button>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No deleted tasks found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}