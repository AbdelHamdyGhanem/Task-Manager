{"ast":null,"code":"// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isArray, isEqual } from \"../../../util\";\n/**\n * Returns a boolean indicating whether a specified value is in an array.\n *\n * @param {Object} obj\n * @param {Array} expr\n */\nexport const $in = (obj, expr, options) => {\n  const [item, arr] = computeValue(obj, expr, null, options);\n  assert(isArray(arr), \"$in second argument must be an array\");\n  return arr.some(isEqual.bind(null, item));\n};","map":{"version":3,"names":["computeValue","assert","isArray","isEqual","$in","obj","expr","options","item","arr","some","bind"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/array/in.js"],"sourcesContent":["// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isArray, isEqual } from \"../../../util\";\n/**\n * Returns a boolean indicating whether a specified value is in an array.\n *\n * @param {Object} obj\n * @param {Array} expr\n */\nexport const $in = (obj, expr, options) => {\n    const [item, arr] = computeValue(obj, expr, null, options);\n    assert(isArray(arr), \"$in second argument must be an array\");\n    return arr.some(isEqual.bind(null, item));\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,OAAO,EAAEC,OAAO,QAAQ,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,GAAG,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACvC,MAAM,CAACC,IAAI,EAAEC,GAAG,CAAC,GAAGT,YAAY,CAACK,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EAC1DN,MAAM,CAACC,OAAO,CAACO,GAAG,CAAC,EAAE,sCAAsC,CAAC;EAC5D,OAAOA,GAAG,CAACC,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC,IAAI,EAAEH,IAAI,CAAC,CAAC;AAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}