{"ast":null,"code":"/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { isNil, isString } from \"../../../util\";\n/**\n * Converts a value to a boolean.\n *\n * @param obj\n * @param expr\n */\nexport const $toBool = (obj, expr, options) => {\n  const val = computeValue(obj, expr, null, options);\n  if (isNil(val)) return null;\n  if (isString(val)) return true;\n  return Boolean(val);\n};","map":{"version":3,"names":["computeValue","isNil","isString","$toBool","obj","expr","options","val","Boolean"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/type/toBool.js"],"sourcesContent":["/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { isNil, isString } from \"../../../util\";\n/**\n * Converts a value to a boolean.\n *\n * @param obj\n * @param expr\n */\nexport const $toBool = (obj, expr, options) => {\n    const val = computeValue(obj, expr, null, options);\n    if (isNil(val))\n        return null;\n    if (isString(val))\n        return true;\n    return Boolean(val);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC3C,MAAMC,GAAG,GAAGP,YAAY,CAACI,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EAClD,IAAIL,KAAK,CAACM,GAAG,CAAC,EACV,OAAO,IAAI;EACf,IAAIL,QAAQ,CAACK,GAAG,CAAC,EACb,OAAO,IAAI;EACf,OAAOC,OAAO,CAACD,GAAG,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}