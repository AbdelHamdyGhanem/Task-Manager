{"ast":null,"code":"/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { MAX_LONG, MIN_LONG } from \"../../../util\";\nimport { toInteger } from \"./_internal\";\n/**\n * Converts a value to a long. If the value cannot be converted to a long, $toLong errors. If the value is null or missing, $toLong returns null.\n * @param obj\n * @param expr\n */\nexport const $toLong = (obj, expr, options) => {\n  return toInteger(obj, expr, options, MAX_LONG, MIN_LONG, \"long\");\n};","map":{"version":3,"names":["MAX_LONG","MIN_LONG","toInteger","$toLong","obj","expr","options"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/type/toLong.js"],"sourcesContent":["/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { MAX_LONG, MIN_LONG } from \"../../../util\";\nimport { toInteger } from \"./_internal\";\n/**\n * Converts a value to a long. If the value cannot be converted to a long, $toLong errors. If the value is null or missing, $toLong returns null.\n * @param obj\n * @param expr\n */\nexport const $toLong = (obj, expr, options) => {\n    return toInteger(obj, expr, options, MAX_LONG, MIN_LONG, \"long\");\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,eAAe;AAClD,SAASC,SAAS,QAAQ,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC3C,OAAOJ,SAAS,CAACE,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEN,QAAQ,EAAEC,QAAQ,EAAE,MAAM,CAAC;AACpE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}