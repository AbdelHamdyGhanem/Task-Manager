{"ast":null,"code":"// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true only when all its expressions evaluate to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $and = (obj, expr, options) => {\n  const value = computeValue(obj, expr, null, options);\n  return truthy(value, options.useStrictMode) && value.every(v => truthy(v, options.useStrictMode));\n};","map":{"version":3,"names":["computeValue","truthy","$and","obj","expr","options","value","useStrictMode","every","v"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/boolean/and.js"],"sourcesContent":["// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true only when all its expressions evaluate to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $and = (obj, expr, options) => {\n    const value = computeValue(obj, expr, null, options);\n    return (truthy(value, options.useStrictMode) &&\n        value.every(v => truthy(v, options.useStrictMode)));\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,QAAQ,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACxC,MAAMC,KAAK,GAAGN,YAAY,CAACG,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACpD,OAAQJ,MAAM,CAACK,KAAK,EAAED,OAAO,CAACE,aAAa,CAAC,IACxCD,KAAK,CAACE,KAAK,CAACC,CAAC,IAAIR,MAAM,CAACQ,CAAC,EAAEJ,OAAO,CAACE,aAAa,CAAC,CAAC;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}