{"ast":null,"code":"/**\n * String Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#string-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, isEqual, isNil, isString } from \"../../../util\";\n/**\n * Compares two strings and returns an integer that reflects the comparison.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $strcasecmp = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  let a = args[0];\n  let b = args[1];\n  if (isEqual(a, b) || args.every(isNil)) return 0;\n  assert(args.every(isString), \"$strcasecmp must resolve to array(2) of strings\");\n  a = a.toUpperCase();\n  b = b.toUpperCase();\n  return a > b && 1 || a < b && -1 || 0;\n};","map":{"version":3,"names":["computeValue","assert","isEqual","isNil","isString","$strcasecmp","obj","expr","options","args","a","b","every","toUpperCase"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/string/strcasecmp.js"],"sourcesContent":["/**\n * String Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#string-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, isEqual, isNil, isString } from \"../../../util\";\n/**\n * Compares two strings and returns an integer that reflects the comparison.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $strcasecmp = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    let a = args[0];\n    let b = args[1];\n    if (isEqual(a, b) || args.every(isNil))\n        return 0;\n    assert(args.every(isString), \"$strcasecmp must resolve to array(2) of strings\");\n    a = a.toUpperCase();\n    b = b.toUpperCase();\n    return (a > b && 1) || (a < b && -1) || 0;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC/C,MAAMC,IAAI,GAAGT,YAAY,CAACM,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,IAAIE,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC;EACf,IAAIE,CAAC,GAAGF,IAAI,CAAC,CAAC,CAAC;EACf,IAAIP,OAAO,CAACQ,CAAC,EAAEC,CAAC,CAAC,IAAIF,IAAI,CAACG,KAAK,CAACT,KAAK,CAAC,EAClC,OAAO,CAAC;EACZF,MAAM,CAACQ,IAAI,CAACG,KAAK,CAACR,QAAQ,CAAC,EAAE,iDAAiD,CAAC;EAC/EM,CAAC,GAAGA,CAAC,CAACG,WAAW,CAAC,CAAC;EACnBF,CAAC,GAAGA,CAAC,CAACE,WAAW,CAAC,CAAC;EACnB,OAAQH,CAAC,GAAGC,CAAC,IAAI,CAAC,IAAMD,CAAC,GAAGC,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC;AAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}