{"ast":null,"code":"/**\n * Set Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#set-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, intersection, isArray } from \"../../../util\";\n/**\n * Returns the common elements of the input sets.\n * @param obj\n * @param expr\n */\nexport const $setIntersection = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  assert(isArray(args) && args.every(isArray), \"$setIntersection: expresssion must resolve to array of arrays\");\n  return intersection(args, options === null || options === void 0 ? void 0 : options.hashFunction);\n};","map":{"version":3,"names":["computeValue","assert","intersection","isArray","$setIntersection","obj","expr","options","args","every","hashFunction"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/set/setIntersection.js"],"sourcesContent":["/**\n * Set Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#set-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, intersection, isArray } from \"../../../util\";\n/**\n * Returns the common elements of the input sets.\n * @param obj\n * @param expr\n */\nexport const $setIntersection = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    assert(isArray(args) && args.every(isArray), \"$setIntersection: expresssion must resolve to array of arrays\");\n    return intersection(args, options === null || options === void 0 ? void 0 : options.hashFunction);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAC7D;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACpD,MAAMC,IAAI,GAAGR,YAAY,CAACK,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnDN,MAAM,CAACE,OAAO,CAACK,IAAI,CAAC,IAAIA,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC,EAAE,+DAA+D,CAAC;EAC7G,OAAOD,YAAY,CAACM,IAAI,EAAED,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,YAAY,CAAC;AACrG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}