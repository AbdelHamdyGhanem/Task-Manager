{"ast":null,"code":"import { assert, cloneDeep, isString } from \"../../util\";\n/**\n * Takes the documents returned by the aggregation pipeline and writes them to a specified collection.\n *\n * Unlike the $out operator in MongoDB, this operator can appear in any position in the pipeline and is\n * useful for collecting intermediate results of an aggregation operation.\n *\n * Note: Object are deep cloned for outputing regardless of the ProcessingMode.\n *\n * @param collection\n * @param expr\n * @param options\n * @returns {*}\n */\nexport const $out = (collection, expr, options) => {\n  const outputColl = isString(expr) ? options === null || options === void 0 ? void 0 : options.collectionResolver(expr) : expr;\n  assert(outputColl instanceof Array, `expression must resolve to an array`);\n  return collection.map(o => {\n    outputColl.push(cloneDeep(o));\n    return o; // passthrough\n  });\n};","map":{"version":3,"names":["assert","cloneDeep","isString","$out","collection","expr","options","outputColl","collectionResolver","Array","map","o","push"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/pipeline/out.js"],"sourcesContent":["import { assert, cloneDeep, isString } from \"../../util\";\n/**\n * Takes the documents returned by the aggregation pipeline and writes them to a specified collection.\n *\n * Unlike the $out operator in MongoDB, this operator can appear in any position in the pipeline and is\n * useful for collecting intermediate results of an aggregation operation.\n *\n * Note: Object are deep cloned for outputing regardless of the ProcessingMode.\n *\n * @param collection\n * @param expr\n * @param options\n * @returns {*}\n */\nexport const $out = (collection, expr, options) => {\n    const outputColl = isString(expr)\n        ? options === null || options === void 0 ? void 0 : options.collectionResolver(expr)\n        : expr;\n    assert(outputColl instanceof Array, `expression must resolve to an array`);\n    return collection.map((o) => {\n        outputColl.push(cloneDeep(o));\n        return o; // passthrough\n    });\n};\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGA,CAACC,UAAU,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC/C,MAAMC,UAAU,GAAGL,QAAQ,CAACG,IAAI,CAAC,GAC3BC,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACE,kBAAkB,CAACH,IAAI,CAAC,GAClFA,IAAI;EACVL,MAAM,CAACO,UAAU,YAAYE,KAAK,EAAE,qCAAqC,CAAC;EAC1E,OAAOL,UAAU,CAACM,GAAG,CAAEC,CAAC,IAAK;IACzBJ,UAAU,CAACK,IAAI,CAACX,SAAS,CAACU,CAAC,CAAC,CAAC;IAC7B,OAAOA,CAAC,CAAC,CAAC;EACd,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}