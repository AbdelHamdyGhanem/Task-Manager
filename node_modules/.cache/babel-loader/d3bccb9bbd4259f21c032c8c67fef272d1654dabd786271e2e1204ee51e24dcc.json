{"ast":null,"code":"// Object Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#object-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil, isObject, isString } from \"../../../util\";\n/**\n * Adds, updates, or removes a specified field in a document.\n *\n * @param {*} obj The target object for this expression\n * @param {*} expr The right-hand side of the operator\n * @param {Options} options Options to use for operation\n */\nexport const $setField = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  if (isNil(args.input)) return null;\n  assert(isObject(args.input), \"$setField expression 'input' must evaluate to an object\");\n  assert(isString(args.field), \"$setField expression 'field' must evaluate to a string\");\n  if (expr.value == \"$$REMOVE\") {\n    delete obj[args.field];\n  } else {\n    obj[args.field] = args.value;\n  }\n  return obj;\n};","map":{"version":3,"names":["computeValue","assert","isNil","isObject","isString","$setField","obj","expr","options","args","input","field","value"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/object/setField.js"],"sourcesContent":["// Object Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#object-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil, isObject, isString } from \"../../../util\";\n/**\n * Adds, updates, or removes a specified field in a document.\n *\n * @param {*} obj The target object for this expression\n * @param {*} expr The right-hand side of the operator\n * @param {Options} options Options to use for operation\n */\nexport const $setField = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    if (isNil(args.input))\n        return null;\n    assert(isObject(args.input), \"$setField expression 'input' must evaluate to an object\");\n    assert(isString(args.field), \"$setField expression 'field' must evaluate to a string\");\n    if (expr.value == \"$$REMOVE\") {\n        delete obj[args.field];\n    }\n    else {\n        obj[args.field] = args.value;\n    }\n    return obj;\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC7C,MAAMC,IAAI,GAAGT,YAAY,CAACM,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,IAAIN,KAAK,CAACO,IAAI,CAACC,KAAK,CAAC,EACjB,OAAO,IAAI;EACfT,MAAM,CAACE,QAAQ,CAACM,IAAI,CAACC,KAAK,CAAC,EAAE,yDAAyD,CAAC;EACvFT,MAAM,CAACG,QAAQ,CAACK,IAAI,CAACE,KAAK,CAAC,EAAE,wDAAwD,CAAC;EACtF,IAAIJ,IAAI,CAACK,KAAK,IAAI,UAAU,EAAE;IAC1B,OAAON,GAAG,CAACG,IAAI,CAACE,KAAK,CAAC;EAC1B,CAAC,MACI;IACDL,GAAG,CAACG,IAAI,CAACE,KAAK,CAAC,GAAGF,IAAI,CAACG,KAAK;EAChC;EACA,OAAON,GAAG;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}