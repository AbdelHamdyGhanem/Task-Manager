{"ast":null,"code":"// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { computeDate, DURATION_IN_MILLIS } from \"./_internal\";\n/**\n * Returns the difference between two dates.\n * @param obj\n * @param expr\n * @param options Options\n */\nexport const $dateDiff = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  const d1 = computeDate(obj, expr.startDate, options);\n  const d2 = computeDate(obj, expr.endDate, options);\n  let diff;\n  switch (args.unit) {\n    case \"year\":\n    case \"quarter\":\n    case \"month\":\n      diff = diffYQM(d1, d2, args.unit);\n      break;\n    default:\n      diff = (d2.getTime() - d1.getTime()) / DURATION_IN_MILLIS[args.unit];\n  }\n  return diff;\n};\nconst unitMonths = {\n  year: 12,\n  quarter: 3,\n  month: 1\n};\nfunction diffYQM(d1, d2, unit) {\n  let months = (d2.getUTCFullYear() - d1.getUTCFullYear()) * 12;\n  months -= d1.getUTCMonth();\n  months += d2.getUTCMonth();\n  return Math.trunc(months / unitMonths[unit]);\n}","map":{"version":3,"names":["computeValue","computeDate","DURATION_IN_MILLIS","$dateDiff","obj","expr","options","args","d1","startDate","d2","endDate","diff","unit","diffYQM","getTime","unitMonths","year","quarter","month","months","getUTCFullYear","getUTCMonth","Math","trunc"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/date/dateDiff.js"],"sourcesContent":["// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { computeDate, DURATION_IN_MILLIS } from \"./_internal\";\n/**\n * Returns the difference between two dates.\n * @param obj\n * @param expr\n * @param options Options\n */\nexport const $dateDiff = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    const d1 = computeDate(obj, expr.startDate, options);\n    const d2 = computeDate(obj, expr.endDate, options);\n    let diff;\n    switch (args.unit) {\n        case \"year\":\n        case \"quarter\":\n        case \"month\":\n            diff = diffYQM(d1, d2, args.unit);\n            break;\n        default:\n            diff = (d2.getTime() - d1.getTime()) / DURATION_IN_MILLIS[args.unit];\n    }\n    return diff;\n};\nconst unitMonths = {\n    year: 12,\n    quarter: 3,\n    month: 1\n};\nfunction diffYQM(d1, d2, unit) {\n    let months = (d2.getUTCFullYear() - d1.getUTCFullYear()) * 12;\n    months -= d1.getUTCMonth();\n    months += d2.getUTCMonth();\n    return Math.trunc(months / unitMonths[unit]);\n}\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC7C,MAAMC,IAAI,GAAGP,YAAY,CAACI,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,MAAME,EAAE,GAAGP,WAAW,CAACG,GAAG,EAAEC,IAAI,CAACI,SAAS,EAAEH,OAAO,CAAC;EACpD,MAAMI,EAAE,GAAGT,WAAW,CAACG,GAAG,EAAEC,IAAI,CAACM,OAAO,EAAEL,OAAO,CAAC;EAClD,IAAIM,IAAI;EACR,QAAQL,IAAI,CAACM,IAAI;IACb,KAAK,MAAM;IACX,KAAK,SAAS;IACd,KAAK,OAAO;MACRD,IAAI,GAAGE,OAAO,CAACN,EAAE,EAAEE,EAAE,EAAEH,IAAI,CAACM,IAAI,CAAC;MACjC;IACJ;MACID,IAAI,GAAG,CAACF,EAAE,CAACK,OAAO,CAAC,CAAC,GAAGP,EAAE,CAACO,OAAO,CAAC,CAAC,IAAIb,kBAAkB,CAACK,IAAI,CAACM,IAAI,CAAC;EAC5E;EACA,OAAOD,IAAI;AACf,CAAC;AACD,MAAMI,UAAU,GAAG;EACfC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,CAAC;EACVC,KAAK,EAAE;AACX,CAAC;AACD,SAASL,OAAOA,CAACN,EAAE,EAAEE,EAAE,EAAEG,IAAI,EAAE;EAC3B,IAAIO,MAAM,GAAG,CAACV,EAAE,CAACW,cAAc,CAAC,CAAC,GAAGb,EAAE,CAACa,cAAc,CAAC,CAAC,IAAI,EAAE;EAC7DD,MAAM,IAAIZ,EAAE,CAACc,WAAW,CAAC,CAAC;EAC1BF,MAAM,IAAIV,EAAE,CAACY,WAAW,CAAC,CAAC;EAC1B,OAAOC,IAAI,CAACC,KAAK,CAACJ,MAAM,GAAGJ,UAAU,CAACH,IAAI,CAAC,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}