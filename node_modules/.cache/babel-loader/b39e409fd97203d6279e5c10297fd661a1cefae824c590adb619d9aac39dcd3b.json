{"ast":null,"code":"var _jsxFileName = \"/Users/abdelghanem/Desktop/task-manager/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, doc, updateDoc } from 'firebase/firestore';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Home.css'; // Ensure this path matches your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  user\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, 'tasks'), orderBy('createdAt'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTasks(fetchedTasks);\n    });\n    return () => unsubscribe();\n  }, []);\n  const onDragEnd = async result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n    const updatedTasks = [...tasks];\n    const [movedTask] = updatedTasks.splice(source.index, 1);\n    movedTask.progress = destination.droppableId;\n    updatedTasks.splice(destination.index, 0, movedTask);\n    setTasks(updatedTasks);\n\n    // Update the task in Firestore\n    const taskDocRef = doc(db, 'tasks', movedTask.id);\n    await updateDoc(taskDocRef, {\n      progress: movedTask.progress\n    });\n  };\n  const renderTasks = (tasks, status) => tasks.filter(task => task.progress === status).map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: task.id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      className: \"task-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Due: \", task.dueDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Priority: \", task.priority]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-board\",\n        children: ['Not Started', 'In Progress', 'Needs Review', 'Done'].map(status => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: status,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), renderTasks(tasks, status), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","orderBy","onSnapshot","doc","updateDoc","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Home","user","_s","tasks","setTasks","q","unsubscribe","snapshot","fetchedTasks","docs","map","id","data","onDragEnd","result","destination","source","updatedTasks","movedTask","splice","index","progress","droppableId","taskDocRef","renderTasks","status","filter","task","draggableId","children","provided","ref","innerRef","draggableProps","dragHandleProps","className","taskName","fileName","_jsxFileName","lineNumber","columnNumber","description","dueDate","priority","droppableProps","placeholder","_c","$RefreshReg$"],"sources":["/Users/abdelghanem/Desktop/task-manager/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, doc, updateDoc } from 'firebase/firestore';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Home.css'; // Ensure this path matches your project structure\n\nconst Home = ({ user }) => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const q = query(collection(db, 'tasks'), orderBy('createdAt'));\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTasks(fetchedTasks);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const onDragEnd = async (result) => {\n    if (!result.destination) return;\n\n    const { source, destination } = result;\n    const updatedTasks = [...tasks];\n    const [movedTask] = updatedTasks.splice(source.index, 1);\n    movedTask.progress = destination.droppableId;\n    updatedTasks.splice(destination.index, 0, movedTask);\n\n    setTasks(updatedTasks);\n\n    // Update the task in Firestore\n    const taskDocRef = doc(db, 'tasks', movedTask.id);\n    await updateDoc(taskDocRef, { progress: movedTask.progress });\n  };\n\n  const renderTasks = (tasks, status) => (\n    tasks.filter(task => task.progress === status).map((task, index) => (\n      <Draggable key={task.id} draggableId={task.id} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className=\"task-card\"\n          >\n            <h3>{task.taskName}</h3>\n            <p>{task.description}</p>\n            <p>Due: {task.dueDate}</p>\n            <p>Priority: {task.priority}</p>\n          </div>\n        )}\n      </Draggable>\n    ))\n  );\n\n  return (\n    <div className=\"home-container\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"tasks-board\">\n          {['Not Started', 'In Progress', 'Needs Review', 'Done'].map(status => (\n            <Droppable key={status} droppableId={status}>\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className=\"column\"\n                >\n                  <h3>{status}</h3>\n                  {renderTasks(tasks, status)}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}