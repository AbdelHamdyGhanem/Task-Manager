{"ast":null,"code":"export function booleanStringToBoolean(str) {\n  if (str === '1') {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function booleanToBooleanString(b) {\n  if (b) {\n    return '1';\n  } else {\n    return '0';\n  }\n}\nexport function oppositeBoolean(input) {\n  if (input === '1') {\n    return '0';\n  } else {\n    return '1';\n  }\n}\nexport function lastChar(str) {\n  return str.slice(-1);\n}\n/**\n * @link https://stackoverflow.com/a/1349426\n */\nfunction makeid(length = 6) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nconst nodeIdPrefix = makeid(4);\nlet lastIdGen = 0;\nexport function nextNodeId() {\n  const ret = 'node_' + nodeIdPrefix + '_' + lastIdGen;\n  lastIdGen++;\n  return ret;\n}\n/**\n * @link https://stackoverflow.com/a/16155417\n */\nexport function decimalToPaddedBinary(decimal, padding) {\n  const binary = (decimal >>> 0).toString(2);\n  const padded = binary.padStart(padding, '0');\n  return padded;\n}\nexport function oppositeBinary(i) {\n  if (i === '1') {\n    return '0';\n  } else if (i === '0') {\n    return '1';\n  } else {\n    throw new Error('non-binary given');\n  }\n}\nexport function binaryToDecimal(binary) {\n  return parseInt(binary, 2);\n}\nexport function minBinaryWithLength(length) {\n  return new Array(length).fill(0).map(() => '0').join('');\n}\nexport function maxBinaryWithLength(length) {\n  return new Array(length).fill(0).map(() => '1').join('');\n}\nexport function getNextStateSet(stateSet) {\n  const decimal = binaryToDecimal(stateSet);\n  const increase = decimal + 1;\n  const binary = decimalToPaddedBinary(increase, stateSet.length);\n  return binary;\n}\nexport function firstKeyOfMap(map) {\n  const iterator1 = map.keys();\n  return iterator1.next().value;\n}\n/**\n * Shuffles array in place. ES6 version\n * @link https://stackoverflow.com/a/6274381\n */\nexport function shuffleArray(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\nexport function lastOfArray(ar) {\n  return ar[ar.length - 1];\n}\n/**\n * @link https://stackoverflow.com/a/6259536\n */\nexport function splitStringToChunks(str, chunkSize) {\n  const chunks = [];\n  for (let i = 0, charsLength = str.length; i < charsLength; i += chunkSize) {\n    chunks.push(str.substring(i, i + chunkSize));\n  }\n  return chunks;\n}","map":{"version":3,"names":["booleanStringToBoolean","str","booleanToBooleanString","b","oppositeBoolean","input","lastChar","slice","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","nodeIdPrefix","lastIdGen","nextNodeId","ret","decimalToPaddedBinary","decimal","padding","binary","toString","padded","padStart","oppositeBinary","Error","binaryToDecimal","parseInt","minBinaryWithLength","Array","fill","map","join","maxBinaryWithLength","getNextStateSet","stateSet","increase","firstKeyOfMap","iterator1","keys","next","value","shuffleArray","a","j","lastOfArray","ar","splitStringToChunks","chunkSize","chunks","charsLength","push","substring"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/binary-decision-diagram/src/util.ts"],"sourcesContent":["import type { BooleanString } from './types.ts';\n\nexport function booleanStringToBoolean(str: BooleanString): boolean {\n    if (str === '1') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function booleanToBooleanString(b: boolean): BooleanString {\n    if (b) {\n        return '1';\n    } else {\n        return '0';\n    }\n}\n\nexport function oppositeBoolean(input: BooleanString): BooleanString {\n    if (input === '1') {\n        return '0';\n    } else {\n        return '1';\n    }\n}\n\nexport function lastChar(str: string): string {\n    return str.slice(-1);\n}\n\n/**\n * @link https://stackoverflow.com/a/1349426\n */\nfunction makeid(length: number = 6): string {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nconst nodeIdPrefix = makeid(4);\nlet lastIdGen = 0;\nexport function nextNodeId(): string {\n    const ret = 'node_' + nodeIdPrefix + '_' + lastIdGen;\n    lastIdGen++;\n    return ret;\n}\n\n/**\n * @link https://stackoverflow.com/a/16155417\n */\nexport function decimalToPaddedBinary(\n    decimal: number,\n    padding: number\n) {\n    const binary = (decimal >>> 0).toString(2);\n    const padded = binary.padStart(padding, '0');\n    return padded;\n}\n\nexport function oppositeBinary(i: string): string {\n    if (i === '1') {\n        return '0';\n    } else if (i === '0') {\n        return '1';\n    } else {\n        throw new Error('non-binary given');\n    }\n}\n\nexport function binaryToDecimal(binary: string): number {\n    return parseInt(binary, 2);\n}\n\nexport function minBinaryWithLength(length: number): string {\n    return new Array(length).fill(0).map(() => '0').join('');\n}\n\nexport function maxBinaryWithLength(length: number): string {\n    return new Array(length).fill(0).map(() => '1').join('');\n}\n\nexport function getNextStateSet(\n    stateSet: string\n): string {\n    const decimal = binaryToDecimal(stateSet);\n    const increase = decimal + 1;\n    const binary = decimalToPaddedBinary(increase, stateSet.length);\n    return binary;\n}\n\nexport function firstKeyOfMap(map: Map<string, any>): string {\n    const iterator1 = map.keys();\n    return iterator1.next().value;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @link https://stackoverflow.com/a/6274381\n */\nexport function shuffleArray<T>(a: T[]): T[] {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * @link https://stackoverflow.com/a/6259536\n */\nexport function splitStringToChunks(str: string, chunkSize: number): string[] {\n    const chunks: string[] = [];\n\n    for (let i = 0, charsLength = str.length; i < charsLength; i += chunkSize) {\n        chunks.push(str.substring(i, i + chunkSize));\n    }\n    return chunks;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}