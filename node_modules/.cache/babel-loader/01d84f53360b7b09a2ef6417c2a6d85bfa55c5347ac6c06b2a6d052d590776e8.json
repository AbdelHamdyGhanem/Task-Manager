{"ast":null,"code":"/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { MAX_INT, MIN_INT } from \"../../../util\";\nimport { toInteger } from \"./_internal\";\n/**\n * Converts a value to an integer. If the value cannot be converted to an integer, $toInt errors. If the value is null or missing, $toInt returns null.\n * @param obj\n * @param expr\n */\nexport const $toInt = (obj, expr, options) => {\n  return toInteger(obj, expr, options, MAX_INT, MIN_INT, \"int\");\n};","map":{"version":3,"names":["MAX_INT","MIN_INT","toInteger","$toInt","obj","expr","options"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/type/toInt.js"],"sourcesContent":["/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { MAX_INT, MIN_INT } from \"../../../util\";\nimport { toInteger } from \"./_internal\";\n/**\n * Converts a value to an integer. If the value cannot be converted to an integer, $toInt errors. If the value is null or missing, $toInt returns null.\n * @param obj\n * @param expr\n */\nexport const $toInt = (obj, expr, options) => {\n    return toInteger(obj, expr, options, MAX_INT, MIN_INT, \"int\");\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,EAAEC,OAAO,QAAQ,eAAe;AAChD,SAASC,SAAS,QAAQ,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC1C,OAAOJ,SAAS,CAACE,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEN,OAAO,EAAEC,OAAO,EAAE,KAAK,CAAC;AACjE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}