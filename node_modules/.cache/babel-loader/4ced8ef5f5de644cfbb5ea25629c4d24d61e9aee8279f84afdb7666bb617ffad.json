{"ast":null,"code":"// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { computeValue } from \"../../../core\";\n/**\n * Compares two values and returns the result of the comparison as an integer.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $cmp = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  if (args[0] > args[1]) return 1;\n  if (args[0] < args[1]) return -1;\n  return 0;\n};","map":{"version":3,"names":["computeValue","$cmp","obj","expr","options","args"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/comparison/cmp.js"],"sourcesContent":["// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { computeValue } from \"../../../core\";\n/**\n * Compares two values and returns the result of the comparison as an integer.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $cmp = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    if (args[0] > args[1])\n        return 1;\n    if (args[0] < args[1])\n        return -1;\n    return 0;\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACxC,MAAMC,IAAI,GAAGL,YAAY,CAACE,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,IAAIC,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EACjB,OAAO,CAAC;EACZ,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,EACjB,OAAO,CAAC,CAAC;EACb,OAAO,CAAC;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}