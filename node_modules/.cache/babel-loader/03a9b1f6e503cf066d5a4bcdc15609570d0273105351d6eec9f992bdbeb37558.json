{"ast":null,"code":"var _jsxFileName = \"/Users/abdelghanem/Desktop/task-manager/src/components/History.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc, setDoc, getDoc } from 'firebase/firestore';\nimport './History.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = ({\n  onRestoreTask\n}) => {\n  _s();\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, 'deletedTasks'), orderBy('deletedAt', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDeletedTasks(fetchedTasks);\n    }, error => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleRestoreTask = async taskId => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      const taskSnapshot = await getDoc(taskRef);\n      if (taskSnapshot.exists()) {\n        const taskData = taskSnapshot.data();\n        const newTaskRef = doc(db, 'tasks', taskId);\n        await setDoc(newTaskRef, {\n          ...taskData,\n          status: 'active'\n        });\n        await deleteDoc(taskRef);\n        console.log('Restored task with ID:', taskId);\n\n        // Call the onRestoreTask prop function to update tasks in Home component\n        onRestoreTask({\n          id: taskId,\n          ...taskData\n        });\n      } else {\n        console.error('Task not found in deletedTasks collection:', taskId);\n      }\n    } catch (error) {\n      console.error('Error restoring task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deleted Tasks History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-list\",\n      children: deletedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Due: \", task.dueDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Priority: \", task.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRestoreTask(task.id),\n          children: \"Restore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"o9bkqHg/cyUcSifiYhrt79l2yCQ=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","query","orderBy","onSnapshot","deleteDoc","doc","setDoc","getDoc","jsxDEV","_jsxDEV","History","onRestoreTask","_s","deletedTasks","setDeletedTasks","q","unsubscribe","snapshot","fetchedTasks","docs","map","id","data","error","console","handleRestoreTask","taskId","taskRef","taskSnapshot","exists","taskData","newTaskRef","status","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","task","taskName","description","dueDate","priority","onClick","_c","$RefreshReg$"],"sources":["/Users/abdelghanem/Desktop/task-manager/src/components/History.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc, setDoc, getDoc } from 'firebase/firestore';\nimport './History.css';\n\nconst History = ({ onRestoreTask }) => {\n  const [deletedTasks, setDeletedTasks] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(db, 'deletedTasks'),\n      orderBy('deletedAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setDeletedTasks(fetchedTasks);\n    }, (error) => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleRestoreTask = async (taskId) => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      const taskSnapshot = await getDoc(taskRef);\n\n      if (taskSnapshot.exists()) {\n        const taskData = taskSnapshot.data();\n        const newTaskRef = doc(db, 'tasks', taskId);\n        await setDoc(newTaskRef, {\n          ...taskData,\n          status: 'active',\n        });\n\n        await deleteDoc(taskRef);\n        console.log('Restored task with ID:', taskId);\n\n        // Call the onRestoreTask prop function to update tasks in Home component\n        onRestoreTask({ id: taskId, ...taskData });\n      } else {\n        console.error('Task not found in deletedTasks collection:', taskId);\n      }\n    } catch (error) {\n      console.error('Error restoring task:', error);\n    }\n  };\n\n  return (\n    <div className=\"history-container\">\n      <h2>Deleted Tasks History</h2>\n      <div className=\"tasks-list\">\n        {deletedTasks.map((task) => (\n          <div key={task.id} className=\"task-card\">\n            <h3>{task.taskName}</h3>\n            <p>{task.description}</p>\n            <p>Due: {task.dueDate}</p>\n            <p>Priority: {task.priority}</p>\n            <button onClick={() => handleRestoreTask(task.id)}>Restore</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default History;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,sBAAsB;AACzC,SAASC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAC3G,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMiB,CAAC,GAAGd,KAAK,CACbD,UAAU,CAACD,EAAE,EAAE,cAAc,CAAC,EAC9BG,OAAO,CAAC,WAAW,EAAE,MAAM,CAC7B,CAAC;IAED,MAAMc,WAAW,GAAGb,UAAU,CAACY,CAAC,EAAGE,QAAQ,IAAK;MAC9C,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACf,GAAG,KAAK;QAC7CgB,EAAE,EAAEhB,GAAG,CAACgB,EAAE;QACV,GAAGhB,GAAG,CAACiB,IAAI,CAAC;MACd,CAAC,CAAC,CAAC;MACHR,eAAe,CAACI,YAAY,CAAC;IAC/B,CAAC,EAAGK,KAAK,IAAK;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;IAEF,OAAO,MAAMP,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,iBAAiB,GAAG,MAAOC,MAAM,IAAK;IAC1C,IAAI;MACF,MAAMC,OAAO,GAAGtB,GAAG,CAACN,EAAE,EAAE,cAAc,EAAE2B,MAAM,CAAC;MAC/C,MAAME,YAAY,GAAG,MAAMrB,MAAM,CAACoB,OAAO,CAAC;MAE1C,IAAIC,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE;QACzB,MAAMC,QAAQ,GAAGF,YAAY,CAACN,IAAI,CAAC,CAAC;QACpC,MAAMS,UAAU,GAAG1B,GAAG,CAACN,EAAE,EAAE,OAAO,EAAE2B,MAAM,CAAC;QAC3C,MAAMpB,MAAM,CAACyB,UAAU,EAAE;UACvB,GAAGD,QAAQ;UACXE,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,MAAM5B,SAAS,CAACuB,OAAO,CAAC;QACxBH,OAAO,CAACS,GAAG,CAAC,wBAAwB,EAAEP,MAAM,CAAC;;QAE7C;QACAf,aAAa,CAAC;UAAEU,EAAE,EAAEK,MAAM;UAAE,GAAGI;QAAS,CAAC,CAAC;MAC5C,CAAC,MAAM;QACLN,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEG,MAAM,CAAC;MACrE;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEd,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC1B,OAAA;MAAA0B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B9B,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBtB,YAAY,CAACO,GAAG,CAAEoB,IAAI,iBACrB/B,OAAA;QAAmByB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtC1B,OAAA;UAAA0B,QAAA,EAAKK,IAAI,CAACC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxB9B,OAAA;UAAA0B,QAAA,EAAIK,IAAI,CAACE;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB9B,OAAA;UAAA0B,QAAA,GAAG,OAAK,EAACK,IAAI,CAACG,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B9B,OAAA;UAAA0B,QAAA,GAAG,YAAU,EAACK,IAAI,CAACI,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChC9B,OAAA;UAAQoC,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACe,IAAI,CAACnB,EAAE,CAAE;UAAAc,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAL3DC,IAAI,CAACnB,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAhEIF,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAkEb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}