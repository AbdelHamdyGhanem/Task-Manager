{"ast":null,"code":"/**\n * Set Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#set-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { notInArray } from \"../../../util\";\n/**\n * Returns elements of a set that do not appear in a second set.\n * @param obj\n * @param expr\n */\nexport const $setDifference = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  return args[0].filter(notInArray.bind(null, args[1]));\n};","map":{"version":3,"names":["computeValue","notInArray","$setDifference","obj","expr","options","args","filter","bind"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/set/setDifference.js"],"sourcesContent":["/**\n * Set Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#set-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { notInArray } from \"../../../util\";\n/**\n * Returns elements of a set that do not appear in a second set.\n * @param obj\n * @param expr\n */\nexport const $setDifference = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    return args[0].filter(notInArray.bind(null, args[1]));\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,UAAU,QAAQ,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAClD,MAAMC,IAAI,GAAGN,YAAY,CAACG,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,OAAOC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACN,UAAU,CAACO,IAAI,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}