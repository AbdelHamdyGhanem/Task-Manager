{"ast":null,"code":"// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil } from \"../../../util\";\n/**\n * Returns the element at the specified array index.\n *\n * @param  {Object} obj\n * @param  {*} expr\n * @return {*}\n */\nexport const $arrayElemAt = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  assert(args instanceof Array && args.length === 2, \"$arrayElemAt expression must resolve to array(2)\");\n  if (args.some(isNil)) return null;\n  const index = args[1];\n  const arr = args[0];\n  if (index < 0 && Math.abs(index) <= arr.length) {\n    return arr[(index + arr.length) % arr.length];\n  } else if (index >= 0 && index < arr.length) {\n    return arr[index];\n  }\n  return undefined;\n};","map":{"version":3,"names":["computeValue","assert","isNil","$arrayElemAt","obj","expr","options","args","Array","length","some","index","arr","Math","abs","undefined"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/array/arrayElemAt.js"],"sourcesContent":["// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil } from \"../../../util\";\n/**\n * Returns the element at the specified array index.\n *\n * @param  {Object} obj\n * @param  {*} expr\n * @return {*}\n */\nexport const $arrayElemAt = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    assert(args instanceof Array && args.length === 2, \"$arrayElemAt expression must resolve to array(2)\");\n    if (args.some(isNil))\n        return null;\n    const index = args[1];\n    const arr = args[0];\n    if (index < 0 && Math.abs(index) <= arr.length) {\n        return arr[(index + arr.length) % arr.length];\n    }\n    else if (index >= 0 && index < arr.length) {\n        return arr[index];\n    }\n    return undefined;\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAChD,MAAMC,IAAI,GAAGP,YAAY,CAACI,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnDL,MAAM,CAACM,IAAI,YAAYC,KAAK,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE,kDAAkD,CAAC;EACtG,IAAIF,IAAI,CAACG,IAAI,CAACR,KAAK,CAAC,EAChB,OAAO,IAAI;EACf,MAAMS,KAAK,GAAGJ,IAAI,CAAC,CAAC,CAAC;EACrB,MAAMK,GAAG,GAAGL,IAAI,CAAC,CAAC,CAAC;EACnB,IAAII,KAAK,GAAG,CAAC,IAAIE,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC,IAAIC,GAAG,CAACH,MAAM,EAAE;IAC5C,OAAOG,GAAG,CAAC,CAACD,KAAK,GAAGC,GAAG,CAACH,MAAM,IAAIG,GAAG,CAACH,MAAM,CAAC;EACjD,CAAC,MACI,IAAIE,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGC,GAAG,CAACH,MAAM,EAAE;IACvC,OAAOG,GAAG,CAACD,KAAK,CAAC;EACrB;EACA,OAAOI,SAAS;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}