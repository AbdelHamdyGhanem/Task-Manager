{"ast":null,"code":"/**\n * String Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#string-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { inArray } from \"../../../util\";\n/**\n * Concatenates two strings.\n *\n * @param obj\n * @param expr\n * @returns {string|*}\n */\nexport const $concat = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  // does not allow concatenation with nulls\n  if ([null, undefined].some(inArray.bind(null, args))) return null;\n  return args.join(\"\");\n};","map":{"version":3,"names":["computeValue","inArray","$concat","obj","expr","options","args","undefined","some","bind","join"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/string/concat.js"],"sourcesContent":["/**\n * String Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#string-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { inArray } from \"../../../util\";\n/**\n * Concatenates two strings.\n *\n * @param obj\n * @param expr\n * @returns {string|*}\n */\nexport const $concat = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    // does not allow concatenation with nulls\n    if ([null, undefined].some(inArray.bind(null, args)))\n        return null;\n    return args.join(\"\");\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC3C,MAAMC,IAAI,GAAGN,YAAY,CAACG,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD;EACA,IAAI,CAAC,IAAI,EAAEE,SAAS,CAAC,CAACC,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC,IAAI,EAAEH,IAAI,CAAC,CAAC,EAChD,OAAO,IAAI;EACf,OAAOA,IAAI,CAACI,IAAI,CAAC,EAAE,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}