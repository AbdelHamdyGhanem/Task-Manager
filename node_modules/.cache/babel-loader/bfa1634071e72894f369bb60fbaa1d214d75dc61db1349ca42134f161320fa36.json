{"ast":null,"code":"// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true when any of its expressions evaluates to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $or = (obj, expr, options) => {\n  const value = computeValue(obj, expr, null, options);\n  const strict = options.useStrictMode;\n  return truthy(value, strict) && value.some(v => truthy(v, strict));\n};","map":{"version":3,"names":["computeValue","truthy","$or","obj","expr","options","value","strict","useStrictMode","some","v"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/boolean/or.js"],"sourcesContent":["// Boolean Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#boolean-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\n/**\n * Returns true when any of its expressions evaluates to true. Accepts any number of argument expressions.\n *\n * @param obj\n * @param expr\n * @returns {boolean}\n */\nexport const $or = (obj, expr, options) => {\n    const value = computeValue(obj, expr, null, options);\n    const strict = options.useStrictMode;\n    return truthy(value, strict) && value.some(v => truthy(v, strict));\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,QAAQ,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,GAAG,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACvC,MAAMC,KAAK,GAAGN,YAAY,CAACG,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACpD,MAAME,MAAM,GAAGF,OAAO,CAACG,aAAa;EACpC,OAAOP,MAAM,CAACK,KAAK,EAAEC,MAAM,CAAC,IAAID,KAAK,CAACG,IAAI,CAACC,CAAC,IAAIT,MAAM,CAACS,CAAC,EAAEH,MAAM,CAAC,CAAC;AACtE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}