{"ast":null,"code":"var _jsxFileName = \"/Users/abdelghanem/Desktop/task-manager/src/components/History.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc, setDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport './History.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = ({\n  onRestoreTask\n}) => {\n  _s();\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const q = query(collection(db, 'deletedTasks'), orderBy('deletedAt', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDeletedTasks(fetchedTasks);\n    }, error => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleDeletePermanently = async taskId => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      await deleteDoc(taskRef);\n      console.log('Deleted task permanently with ID:', taskId);\n      // Optionally, navigate or update state as needed\n    } catch (error) {\n      console.error('Error deleting task permanently:', error);\n    }\n  };\n  const handleRestoreTask = async task => {\n    try {\n      // Restore the task by setting it in the appropriate collection (e.g., 'tasks')\n      const taskRef = doc(db, 'tasks', task.id);\n      await setDoc(taskRef, task); // Ensure setDoc is imported from firebase/firestore\n\n      // Delete the task from 'deletedTasks' collection after restoration\n      await deleteDoc(doc(db, 'deletedTasks', task.id));\n      console.log('Restored task with ID:', task.id);\n      onRestoreTask(task); // Notify parent component about the restoration\n    } catch (error) {\n      console.error('Error restoring task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deleted Tasks History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-list\",\n      children: deletedTasks.length > 0 ? deletedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Task Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 18\n          }, this), \" \", task.taskName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 18\n          }, this), \" \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Deleted At:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 18\n          }, this), \" \", task.deletedAt ? new Date(task.deletedAt.seconds * 1000).toLocaleString() : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRestoreTask(task),\n          children: \"Restore Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePermanently(task.id),\n          children: \"Delete Permanently\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No deleted tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"HHw3bLsn0C0o03nraulQLvje+uw=\", false, function () {\n  return [useNavigate];\n});\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","query","orderBy","onSnapshot","deleteDoc","doc","setDoc","useNavigate","jsxDEV","_jsxDEV","History","onRestoreTask","_s","deletedTasks","setDeletedTasks","navigate","q","unsubscribe","snapshot","fetchedTasks","docs","map","id","data","error","console","handleDeletePermanently","taskId","taskRef","log","handleRestoreTask","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","taskName","description","deletedAt","Date","seconds","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["/Users/abdelghanem/Desktop/task-manager/src/components/History.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc, setDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport './History.css';\n\nconst History = ({ onRestoreTask }) => {\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const q = query(\n      collection(db, 'deletedTasks'),\n      orderBy('deletedAt', 'desc')\n    );\n  \n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setDeletedTasks(fetchedTasks);\n    }, (error) => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n  \n    return () => unsubscribe();\n  }, []);\n\n  const handleDeletePermanently = async (taskId) => {\n    try {\n      const taskRef = doc(db, 'deletedTasks', taskId);\n      await deleteDoc(taskRef);\n      console.log('Deleted task permanently with ID:', taskId);\n      // Optionally, navigate or update state as needed\n    } catch (error) {\n      console.error('Error deleting task permanently:', error);\n    }\n  };\n\n  const handleRestoreTask = async (task) => {\n    try {\n      // Restore the task by setting it in the appropriate collection (e.g., 'tasks')\n      const taskRef = doc(db, 'tasks', task.id);\n      await setDoc(taskRef, task); // Ensure setDoc is imported from firebase/firestore\n\n      // Delete the task from 'deletedTasks' collection after restoration\n      await deleteDoc(doc(db, 'deletedTasks', task.id));\n\n      console.log('Restored task with ID:', task.id);\n      onRestoreTask(task); // Notify parent component about the restoration\n    } catch (error) {\n      console.error('Error restoring task:', error);\n    }\n  };\n\n  return (\n    <div className=\"history-container\">\n      <h2>Deleted Tasks History</h2>\n      <div className=\"history-list\">\n        {deletedTasks.length > 0 ? (\n          deletedTasks.map(task => (\n            <div key={task.id} className=\"history-item\">\n              <p><strong>Task Name:</strong> {task.taskName}</p>\n              <p><strong>Description:</strong> {task.description}</p>\n              <p><strong>Deleted At:</strong> {task.deletedAt ? new Date(task.deletedAt.seconds * 1000).toLocaleString() : 'Unknown'}</p>\n              <button onClick={() => handleRestoreTask(task)}>Restore Task</button>\n              <button onClick={() => handleDeletePermanently(task.id)}>Delete Permanently</button>\n            </div>\n          ))\n        ) : (\n          <p>No deleted tasks found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}