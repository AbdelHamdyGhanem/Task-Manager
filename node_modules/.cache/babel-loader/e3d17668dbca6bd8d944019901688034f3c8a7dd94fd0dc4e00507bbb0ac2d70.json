{"ast":null,"code":"import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import'./SideMenu.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SideMenu=_ref=>{let{closeMenu,user}=_ref;const[isOpen,setIsOpen]=useState(false);const navigate=useNavigate();const toggleMenu=()=>{setIsOpen(!isOpen);};const handleLinkClick=path=>{navigate(path);toggleMenu();if(closeMenu){closeMenu();}};const handlePreferencesClick=()=>{// Handle what happens when Preferences button is clicked\n// For example, navigate to '/preferences' or perform an action\nconsole.log(\"Navigate to Preferences or perform an action\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"side-menu \".concat(isOpen?'open':''),children:[/*#__PURE__*/_jsx(\"button\",{className:\"menu-toggle\",onClick:toggleMenu,children:isOpen?'✕':'≡'}),isOpen&&/*#__PURE__*/_jsxs(\"nav\",{children:[/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:()=>handleLinkClick('/'),children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:()=>handleLinkClick('/create-task'),children:\"Create Task\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:()=>handleLinkClick('/history'),children:\"History\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:handlePreferencesClick,children:\"Preferences\"})})]}),user&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:user.photoURL,alt:\"User Avatar\",className:\"user-avatar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"user-details\",children:/*#__PURE__*/_jsx(\"p\",{className:\"user-name\",children:user.displayName})})]})]})]});};export default SideMenu;","map":{"version":3,"names":["React","useState","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","SideMenu","_ref","closeMenu","user","isOpen","setIsOpen","navigate","toggleMenu","handleLinkClick","path","handlePreferencesClick","console","log","className","concat","children","onClick","src","photoURL","alt","displayName"],"sources":["/Users/abdelghanem/Desktop/task-manager/src/components/SideMenu.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './SideMenu.css';\n\nconst SideMenu = ({ closeMenu, user }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleLinkClick = (path) => {\n    navigate(path);\n    toggleMenu();\n    if (closeMenu) {\n      closeMenu();\n    }\n  };\n\n  const handlePreferencesClick = () => {\n    // Handle what happens when Preferences button is clicked\n    // For example, navigate to '/preferences' or perform an action\n    console.log(\"Navigate to Preferences or perform an action\");\n  };\n\n  return (\n    <div className={`side-menu ${isOpen ? 'open' : ''}`}>\n      <button className=\"menu-toggle\" onClick={toggleMenu}>\n        {isOpen ? '✕' : '≡'}\n      </button>\n      {isOpen && (\n        <nav>\n          <ul>\n            <li>\n              <button className=\"menu-button\" onClick={() => handleLinkClick('/')}>Home</button>\n            </li>\n            <li>\n              <button className=\"menu-button\" onClick={() => handleLinkClick('/create-task')}>Create Task</button>\n            </li>\n            <li>\n              <button className=\"menu-button\" onClick={() => handleLinkClick('/history')}>History</button>\n            </li>\n            {/* Add Preferences button */}\n            <li>\n              <button className=\"menu-button\" onClick={handlePreferencesClick}>Preferences</button>\n            </li>\n          </ul>\n          {user && (\n            <div className=\"user-info\">\n              <img src={user.photoURL} alt=\"User Avatar\" className=\"user-avatar\" />\n              <div className=\"user-details\">\n                <p className=\"user-name\">{user.displayName}</p>\n              </div>\n            </div>\n          )}\n        </nav>\n      )}\n    </div>\n  );\n};\n\nexport default SideMenu;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,SAAS,CAAEC,IAAK,CAAC,CAAAF,IAAA,CACnC,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAY,UAAU,CAAGA,CAAA,GAAM,CACvBF,SAAS,CAAC,CAACD,MAAM,CAAC,CACpB,CAAC,CAED,KAAM,CAAAI,eAAe,CAAIC,IAAI,EAAK,CAChCH,QAAQ,CAACG,IAAI,CAAC,CACdF,UAAU,CAAC,CAAC,CACZ,GAAIL,SAAS,CAAE,CACbA,SAAS,CAAC,CAAC,CACb,CACF,CAAC,CAED,KAAM,CAAAQ,sBAAsB,CAAGA,CAAA,GAAM,CACnC;AACA;AACAC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC,CAC7D,CAAC,CAED,mBACEb,KAAA,QAAKc,SAAS,cAAAC,MAAA,CAAeV,MAAM,CAAG,MAAM,CAAG,EAAE,CAAG,CAAAW,QAAA,eAClDlB,IAAA,WAAQgB,SAAS,CAAC,aAAa,CAACG,OAAO,CAAET,UAAW,CAAAQ,QAAA,CACjDX,MAAM,CAAG,GAAG,CAAG,GAAG,CACb,CAAC,CACRA,MAAM,eACLL,KAAA,QAAAgB,QAAA,eACEhB,KAAA,OAAAgB,QAAA,eACElB,IAAA,OAAAkB,QAAA,cACElB,IAAA,WAAQgB,SAAS,CAAC,aAAa,CAACG,OAAO,CAAEA,CAAA,GAAMR,eAAe,CAAC,GAAG,CAAE,CAAAO,QAAA,CAAC,MAAI,CAAQ,CAAC,CAChF,CAAC,cACLlB,IAAA,OAAAkB,QAAA,cACElB,IAAA,WAAQgB,SAAS,CAAC,aAAa,CAACG,OAAO,CAAEA,CAAA,GAAMR,eAAe,CAAC,cAAc,CAAE,CAAAO,QAAA,CAAC,aAAW,CAAQ,CAAC,CAClG,CAAC,cACLlB,IAAA,OAAAkB,QAAA,cACElB,IAAA,WAAQgB,SAAS,CAAC,aAAa,CAACG,OAAO,CAAEA,CAAA,GAAMR,eAAe,CAAC,UAAU,CAAE,CAAAO,QAAA,CAAC,SAAO,CAAQ,CAAC,CAC1F,CAAC,cAELlB,IAAA,OAAAkB,QAAA,cACElB,IAAA,WAAQgB,SAAS,CAAC,aAAa,CAACG,OAAO,CAAEN,sBAAuB,CAAAK,QAAA,CAAC,aAAW,CAAQ,CAAC,CACnF,CAAC,EACH,CAAC,CACJZ,IAAI,eACHJ,KAAA,QAAKc,SAAS,CAAC,WAAW,CAAAE,QAAA,eACxBlB,IAAA,QAAKoB,GAAG,CAAEd,IAAI,CAACe,QAAS,CAACC,GAAG,CAAC,aAAa,CAACN,SAAS,CAAC,aAAa,CAAE,CAAC,cACrEhB,IAAA,QAAKgB,SAAS,CAAC,cAAc,CAAAE,QAAA,cAC3BlB,IAAA,MAAGgB,SAAS,CAAC,WAAW,CAAAE,QAAA,CAAEZ,IAAI,CAACiB,WAAW,CAAI,CAAC,CAC5C,CAAC,EACH,CACN,EACE,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}