{"ast":null,"code":"import { computeValue } from \"../../core\";\nimport { $percentile as __percentile } from \"../accumulator/percentile\";\n/**\n * Returns an array of scalar values that correspond to specified percentile values.\n *\n * @param obj The current object\n * @param expr The operator expression\n * @param options Options to use for processing\n * @returns {Array<number>}\n */\nexport const $percentile = (obj, expr, options) => {\n  const input = computeValue(obj, expr.input, null, options);\n  return __percentile(input, Object.assign(Object.assign({}, expr), {\n    input: \"$$CURRENT\"\n  }), options);\n};","map":{"version":3,"names":["computeValue","$percentile","__percentile","obj","expr","options","input","Object","assign"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/percentile.js"],"sourcesContent":["import { computeValue } from \"../../core\";\nimport { $percentile as __percentile } from \"../accumulator/percentile\";\n/**\n * Returns an array of scalar values that correspond to specified percentile values.\n *\n * @param obj The current object\n * @param expr The operator expression\n * @param options Options to use for processing\n * @returns {Array<number>}\n */\nexport const $percentile = (obj, expr, options) => {\n    const input = computeValue(obj, expr.input, null, options);\n    return __percentile(input, Object.assign(Object.assign({}, expr), { input: \"$$CURRENT\" }), options);\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,YAAY;AACzC,SAASC,WAAW,IAAIC,YAAY,QAAQ,2BAA2B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMD,WAAW,GAAGA,CAACE,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC/C,MAAMC,KAAK,GAAGN,YAAY,CAACG,GAAG,EAAEC,IAAI,CAACE,KAAK,EAAE,IAAI,EAAED,OAAO,CAAC;EAC1D,OAAOH,YAAY,CAACI,KAAK,EAAEC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,IAAI,CAAC,EAAE;IAAEE,KAAK,EAAE;EAAY,CAAC,CAAC,EAAED,OAAO,CAAC;AACvG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}