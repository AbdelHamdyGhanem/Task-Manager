{"ast":null,"code":"import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    time: micro(),\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n  state.bc.onmessage = function (msgEvent) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msgEvent.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  // Deno runtime\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined' && globalThis.Deno && globalThis.Deno.args) {\n    return true;\n  }\n\n  // Browser runtime\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","map":{"version":3,"names":["microSeconds","micro","PROMISE_RESOLVED_VOID","type","create","channelName","state","time","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msgEvent","data","close","channelState","postMessage","messageJson","err","Promise","reject","onMessage","fn","canBeUsed","globalThis","Deno","args","window","self","_pubkey","Error","averageResponseTime","NativeMethod"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/broadcast-channel/dist/esbrowser/methods/native.js"],"sourcesContent":["import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    time: micro(),\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msgEvent) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msgEvent.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  // Deno runtime\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined' && globalThis.Deno && globalThis.Deno.args) {\n    return true;\n  }\n\n  // Browser runtime\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};"],"mappings":"AAAA,SAASA,YAAY,IAAIC,KAAK,EAAEC,qBAAqB,QAAQ,YAAY;AACzE,OAAO,IAAIF,YAAY,GAAGC,KAAK;AAC/B,OAAO,IAAIE,IAAI,GAAG,QAAQ;AAC1B,OAAO,SAASC,MAAMA,CAACC,WAAW,EAAE;EAClC,IAAIC,KAAK,GAAG;IACVC,IAAI,EAAEN,KAAK,CAAC,CAAC;IACbO,gBAAgB,EAAE,IAAI;IACtBC,EAAE,EAAE,IAAIC,gBAAgB,CAACL,WAAW,CAAC;IACrCM,MAAM,EAAE,EAAE,CAAC;EACb,CAAC;EAEDL,KAAK,CAACG,EAAE,CAACG,SAAS,GAAG,UAAUC,QAAQ,EAAE;IACvC,IAAIP,KAAK,CAACE,gBAAgB,EAAE;MAC1BF,KAAK,CAACE,gBAAgB,CAACK,QAAQ,CAACC,IAAI,CAAC;IACvC;EACF,CAAC;EACD,OAAOR,KAAK;AACd;AACA,OAAO,SAASS,KAAKA,CAACC,YAAY,EAAE;EAClCA,YAAY,CAACP,EAAE,CAACM,KAAK,CAAC,CAAC;EACvBC,YAAY,CAACL,MAAM,GAAG,EAAE;AAC1B;AACA,OAAO,SAASM,WAAWA,CAACD,YAAY,EAAEE,WAAW,EAAE;EACrD,IAAI;IACFF,YAAY,CAACP,EAAE,CAACQ,WAAW,CAACC,WAAW,EAAE,KAAK,CAAC;IAC/C,OAAOhB,qBAAqB;EAC9B,CAAC,CAAC,OAAOiB,GAAG,EAAE;IACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;EAC5B;AACF;AACA,OAAO,SAASG,SAASA,CAACN,YAAY,EAAEO,EAAE,EAAE;EAC1CP,YAAY,CAACR,gBAAgB,GAAGe,EAAE;AACpC;AACA,OAAO,SAASC,SAASA,CAAA,EAAG;EAC1B;EACA;EACA,IAAI,OAAOC,UAAU,KAAK,WAAW,IAAIA,UAAU,CAACC,IAAI,IAAID,UAAU,CAACC,IAAI,CAACC,IAAI,EAAE;IAChF,OAAO,IAAI;EACb;;EAEA;EACA,IAAI,CAAC,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOC,IAAI,KAAK,WAAW,KAAK,OAAOnB,gBAAgB,KAAK,UAAU,EAAE;IAC5G,IAAIA,gBAAgB,CAACoB,OAAO,EAAE;MAC5B,MAAM,IAAIC,KAAK,CAAC,qGAAqG,CAAC;IACxH;IACA,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF;AACA,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EACpC,OAAO,GAAG;AACZ;AACA,OAAO,IAAIC,YAAY,GAAG;EACxB7B,MAAM,EAAEA,MAAM;EACdW,KAAK,EAAEA,KAAK;EACZO,SAAS,EAAEA,SAAS;EACpBL,WAAW,EAAEA,WAAW;EACxBO,SAAS,EAAEA,SAAS;EACpBrB,IAAI,EAAEA,IAAI;EACV6B,mBAAmB,EAAEA,mBAAmB;EACxChC,YAAY,EAAEA;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}