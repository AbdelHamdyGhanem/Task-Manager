{"ast":null,"code":"// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { adjustDate, computeDate, DURATION_IN_MILLIS, parseTimezone } from \"./_internal\";\n/**\n * Increments a Date object by a specified number of time units.\n * @param obj\n * @param expr\n */\nexport const $dateAdd = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  const d = computeDate(obj, expr.startDate, options);\n  switch (args.unit) {\n    case \"year\":\n      d.setUTCFullYear(d.getUTCFullYear() + args.amount);\n      break;\n    case \"quarter\":\n      addMonth(d, 3 * args.amount);\n      break;\n    case \"month\":\n      addMonth(d, args.amount);\n      break;\n    default:\n      d.setTime(d.getTime() + DURATION_IN_MILLIS[args.unit] * args.amount);\n  }\n  if (args.timezone) {\n    const tz = parseTimezone(args.timezone);\n    adjustDate(d, tz);\n  }\n  return d;\n};\nfunction addMonth(d, amount) {\n  // months start from 0 to 11.\n  const m = d.getUTCMonth() + amount;\n  const yearOffset = Math.floor(m / 12);\n  if (m < 0) {\n    const month = m % 12 + 12;\n    d.setUTCFullYear(d.getUTCFullYear() + yearOffset, month, d.getUTCDate());\n  } else {\n    d.setUTCFullYear(d.getUTCFullYear() + yearOffset, m % 12, d.getUTCDate());\n  }\n}","map":{"version":3,"names":["computeValue","adjustDate","computeDate","DURATION_IN_MILLIS","parseTimezone","$dateAdd","obj","expr","options","args","d","startDate","unit","setUTCFullYear","getUTCFullYear","amount","addMonth","setTime","getTime","timezone","tz","m","getUTCMonth","yearOffset","Math","floor","month","getUTCDate"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/date/dateAdd.js"],"sourcesContent":["// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { adjustDate, computeDate, DURATION_IN_MILLIS, parseTimezone } from \"./_internal\";\n/**\n * Increments a Date object by a specified number of time units.\n * @param obj\n * @param expr\n */\nexport const $dateAdd = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    const d = computeDate(obj, expr.startDate, options);\n    switch (args.unit) {\n        case \"year\":\n            d.setUTCFullYear(d.getUTCFullYear() + args.amount);\n            break;\n        case \"quarter\":\n            addMonth(d, 3 * args.amount);\n            break;\n        case \"month\":\n            addMonth(d, args.amount);\n            break;\n        default:\n            d.setTime(d.getTime() + DURATION_IN_MILLIS[args.unit] * args.amount);\n    }\n    if (args.timezone) {\n        const tz = parseTimezone(args.timezone);\n        adjustDate(d, tz);\n    }\n    return d;\n};\nfunction addMonth(d, amount) {\n    // months start from 0 to 11.\n    const m = d.getUTCMonth() + amount;\n    const yearOffset = Math.floor(m / 12);\n    if (m < 0) {\n        const month = (m % 12) + 12;\n        d.setUTCFullYear(d.getUTCFullYear() + yearOffset, month, d.getUTCDate());\n    }\n    else {\n        d.setUTCFullYear(d.getUTCFullYear() + yearOffset, m % 12, d.getUTCDate());\n    }\n}\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,UAAU,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,aAAa,QAAQ,aAAa;AACxF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC5C,MAAMC,IAAI,GAAGT,YAAY,CAACM,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,MAAME,CAAC,GAAGR,WAAW,CAACI,GAAG,EAAEC,IAAI,CAACI,SAAS,EAAEH,OAAO,CAAC;EACnD,QAAQC,IAAI,CAACG,IAAI;IACb,KAAK,MAAM;MACPF,CAAC,CAACG,cAAc,CAACH,CAAC,CAACI,cAAc,CAAC,CAAC,GAAGL,IAAI,CAACM,MAAM,CAAC;MAClD;IACJ,KAAK,SAAS;MACVC,QAAQ,CAACN,CAAC,EAAE,CAAC,GAAGD,IAAI,CAACM,MAAM,CAAC;MAC5B;IACJ,KAAK,OAAO;MACRC,QAAQ,CAACN,CAAC,EAAED,IAAI,CAACM,MAAM,CAAC;MACxB;IACJ;MACIL,CAAC,CAACO,OAAO,CAACP,CAAC,CAACQ,OAAO,CAAC,CAAC,GAAGf,kBAAkB,CAACM,IAAI,CAACG,IAAI,CAAC,GAAGH,IAAI,CAACM,MAAM,CAAC;EAC5E;EACA,IAAIN,IAAI,CAACU,QAAQ,EAAE;IACf,MAAMC,EAAE,GAAGhB,aAAa,CAACK,IAAI,CAACU,QAAQ,CAAC;IACvClB,UAAU,CAACS,CAAC,EAAEU,EAAE,CAAC;EACrB;EACA,OAAOV,CAAC;AACZ,CAAC;AACD,SAASM,QAAQA,CAACN,CAAC,EAAEK,MAAM,EAAE;EACzB;EACA,MAAMM,CAAC,GAAGX,CAAC,CAACY,WAAW,CAAC,CAAC,GAAGP,MAAM;EAClC,MAAMQ,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,GAAG,EAAE,CAAC;EACrC,IAAIA,CAAC,GAAG,CAAC,EAAE;IACP,MAAMK,KAAK,GAAIL,CAAC,GAAG,EAAE,GAAI,EAAE;IAC3BX,CAAC,CAACG,cAAc,CAACH,CAAC,CAACI,cAAc,CAAC,CAAC,GAAGS,UAAU,EAAEG,KAAK,EAAEhB,CAAC,CAACiB,UAAU,CAAC,CAAC,CAAC;EAC5E,CAAC,MACI;IACDjB,CAAC,CAACG,cAAc,CAACH,CAAC,CAACI,cAAc,CAAC,CAAC,GAAGS,UAAU,EAAEF,CAAC,GAAG,EAAE,EAAEX,CAAC,CAACiB,UAAU,CAAC,CAAC,CAAC;EAC7E;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}