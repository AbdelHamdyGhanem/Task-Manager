{"ast":null,"code":"var _jsxFileName = \"/Users/abdelghanem/Desktop/task-manager/src/components/History.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport './History.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = () => {\n  _s();\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const q = query(collection(db, 'deletedTasks'), orderBy('deletedAt', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      console.log('Fetched deleted tasks:', fetchedTasks);\n      setDeletedTasks(fetchedTasks);\n    }, error => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleDeletePermanently = async taskId => {\n    try {\n      await deleteDoc(doc(db, 'deletedTasks', taskId));\n      console.log('Deleted task permanently with ID:', taskId);\n      // Optionally, navigate or update state as needed\n    } catch (error) {\n      console.error('Error deleting task permanently:', error);\n    }\n  };\n  console.log('Current deleted tasks state:', deletedTasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deleted Tasks History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-list\",\n      children: deletedTasks.length > 0 ? deletedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Task Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 18\n          }, this), \" \", task.taskName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this), \" \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Deleted At:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 18\n          }, this), \" \", task.deletedAt ? new Date(task.deletedAt.seconds * 1000).toLocaleString() : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePermanently(task.id),\n          children: \"Delete Permanently\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No deleted tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"HHw3bLsn0C0o03nraulQLvje+uw=\", false, function () {\n  return [useNavigate];\n});\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","query","orderBy","onSnapshot","deleteDoc","doc","useNavigate","jsxDEV","_jsxDEV","History","_s","deletedTasks","setDeletedTasks","navigate","q","unsubscribe","snapshot","fetchedTasks","docs","map","id","data","console","log","error","handleDeletePermanently","taskId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","task","taskName","description","deletedAt","Date","seconds","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["/Users/abdelghanem/Desktop/task-manager/src/components/History.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, query, orderBy, onSnapshot, deleteDoc, doc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport './History.css';\n\nconst History = () => {\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const q = query(\n      collection(db, 'deletedTasks'),\n      orderBy('deletedAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const fetchedTasks = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      console.log('Fetched deleted tasks:', fetchedTasks);\n      setDeletedTasks(fetchedTasks);\n    }, (error) => {\n      console.error('Error fetching deleted tasks:', error);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleDeletePermanently = async (taskId) => {\n    try {\n      await deleteDoc(doc(db, 'deletedTasks', taskId));\n      console.log('Deleted task permanently with ID:', taskId);\n      // Optionally, navigate or update state as needed\n    } catch (error) {\n      console.error('Error deleting task permanently:', error);\n    }\n  };\n\n  console.log('Current deleted tasks state:', deletedTasks);\n\n  return (\n    <div className=\"history-container\">\n      <h2>Deleted Tasks History</h2>\n      <div className=\"history-list\">\n        {deletedTasks.length > 0 ? (\n          deletedTasks.map(task => (\n            <div key={task.id} className=\"history-item\">\n              <p><strong>Task Name:</strong> {task.taskName}</p>\n              <p><strong>Description:</strong> {task.description}</p>\n              <p><strong>Deleted At:</strong> {task.deletedAt ? new Date(task.deletedAt.seconds * 1000).toLocaleString() : 'Unknown'}</p>\n              <button onClick={() => handleDeletePermanently(task.id)}>Delete Permanently</button>\n            </div>\n          ))\n        ) : (\n          <p>No deleted tasks found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}