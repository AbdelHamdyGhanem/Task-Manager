{"ast":null,"code":"/**\n * Set Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#set-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, isArray, unique } from \"../../../util\";\n/**\n * Returns a set that holds all elements of the input sets.\n * @param obj\n * @param expr\n */\nexport const $setUnion = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  assert(isArray(args) && args.length == 2 && args.every(isArray), \"$setUnion: arguments must be arrays\");\n  return unique(args[0].concat(args[1]), options === null || options === void 0 ? void 0 : options.hashFunction);\n};","map":{"version":3,"names":["computeValue","assert","isArray","unique","$setUnion","obj","expr","options","args","length","every","concat","hashFunction"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/set/setUnion.js"],"sourcesContent":["/**\n * Set Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#set-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, isArray, unique } from \"../../../util\";\n/**\n * Returns a set that holds all elements of the input sets.\n * @param obj\n * @param expr\n */\nexport const $setUnion = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    assert(isArray(args) && args.length == 2 && args.every(isArray), \"$setUnion: arguments must be arrays\");\n    return unique(args[0].concat(args[1]), options === null || options === void 0 ? void 0 : options.hashFunction);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,OAAO,EAAEC,MAAM,QAAQ,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC7C,MAAMC,IAAI,GAAGR,YAAY,CAACK,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnDN,MAAM,CAACC,OAAO,CAACM,IAAI,CAAC,IAAIA,IAAI,CAACC,MAAM,IAAI,CAAC,IAAID,IAAI,CAACE,KAAK,CAACR,OAAO,CAAC,EAAE,qCAAqC,CAAC;EACvG,OAAOC,MAAM,CAACK,IAAI,CAAC,CAAC,CAAC,CAACG,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,EAAED,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,YAAY,CAAC;AAClH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}