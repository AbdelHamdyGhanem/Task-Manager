{"ast":null,"code":"// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { normalize } from \"../../../util\";\n/**\n * Inverts the effect of a query expression and returns documents that do not match the query expression.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $not = (selector, rhs, options) => {\n  const criteria = {};\n  criteria[selector] = normalize(rhs);\n  const query = new Query(criteria, options);\n  return obj => !query.test(obj);\n};","map":{"version":3,"names":["Query","normalize","$not","selector","rhs","options","criteria","query","obj","test"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/query/logical/not.js"],"sourcesContent":["// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { normalize } from \"../../../util\";\n/**\n * Inverts the effect of a query expression and returns documents that do not match the query expression.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $not = (selector, rhs, options) => {\n    const criteria = {};\n    criteria[selector] = normalize(rhs);\n    const query = new Query(criteria, options);\n    return (obj) => !query.test(obj);\n};\n"],"mappings":"AAAA;AACA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,SAAS,QAAQ,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGA,CAACC,QAAQ,EAAEC,GAAG,EAAEC,OAAO,KAAK;EAC5C,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBA,QAAQ,CAACH,QAAQ,CAAC,GAAGF,SAAS,CAACG,GAAG,CAAC;EACnC,MAAMG,KAAK,GAAG,IAAIP,KAAK,CAACM,QAAQ,EAAED,OAAO,CAAC;EAC1C,OAAQG,GAAG,IAAK,CAACD,KAAK,CAACE,IAAI,CAACD,GAAG,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}