{"ast":null,"code":"/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { isNumber } from \"../../../util\";\n/**\n * Checks if the specified expression resolves to a numeric value\n *\n * @param obj\n * @param expr\n */\nexport const $isNumber = (obj, expr, options) => {\n  const n = computeValue(obj, expr, null, options);\n  return isNumber(n);\n};","map":{"version":3,"names":["computeValue","isNumber","$isNumber","obj","expr","options","n"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/type/isNumber.js"],"sourcesContent":["/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { isNumber } from \"../../../util\";\n/**\n * Checks if the specified expression resolves to a numeric value\n *\n * @param obj\n * @param expr\n */\nexport const $isNumber = (obj, expr, options) => {\n    const n = computeValue(obj, expr, null, options);\n    return isNumber(n);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,QAAQ,QAAQ,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC7C,MAAMC,CAAC,GAAGN,YAAY,CAACG,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EAChD,OAAOJ,QAAQ,CAACK,CAAC,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}