{"ast":null,"code":"import { compare, isNotNaN } from \"../../util\";\nimport { $push } from \"./push\";\n/**\n * Returns the lowest value in a group.\n *\n * @param {Array} collection The input array\n * @param {Object} expr The right-hand side expression value of the operator\n * @param {Options} The options to use for this operator\n * @returns {*}\n */\nexport const $min = (collection, expr, options) => {\n  const nums = $push(collection, expr, options).filter(isNotNaN);\n  const n = nums.reduce((acc, n) => compare(n, acc) <= 0 ? n : acc, Infinity);\n  return n === Infinity ? undefined : n;\n};","map":{"version":3,"names":["compare","isNotNaN","$push","$min","collection","expr","options","nums","filter","n","reduce","acc","Infinity","undefined"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/accumulator/min.js"],"sourcesContent":["import { compare, isNotNaN } from \"../../util\";\nimport { $push } from \"./push\";\n/**\n * Returns the lowest value in a group.\n *\n * @param {Array} collection The input array\n * @param {Object} expr The right-hand side expression value of the operator\n * @param {Options} The options to use for this operator\n * @returns {*}\n */\nexport const $min = (collection, expr, options) => {\n    const nums = $push(collection, expr, options).filter(isNotNaN);\n    const n = nums.reduce((acc, n) => (compare(n, acc) <= 0 ? n : acc), Infinity);\n    return n === Infinity ? undefined : n;\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,YAAY;AAC9C,SAASC,KAAK,QAAQ,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGA,CAACC,UAAU,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC/C,MAAMC,IAAI,GAAGL,KAAK,CAACE,UAAU,EAAEC,IAAI,EAAEC,OAAO,CAAC,CAACE,MAAM,CAACP,QAAQ,CAAC;EAC9D,MAAMQ,CAAC,GAAGF,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEF,CAAC,KAAMT,OAAO,CAACS,CAAC,EAAEE,GAAG,CAAC,IAAI,CAAC,GAAGF,CAAC,GAAGE,GAAI,EAAEC,QAAQ,CAAC;EAC7E,OAAOH,CAAC,KAAKG,QAAQ,GAAGC,SAAS,GAAGJ,CAAC;AACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}