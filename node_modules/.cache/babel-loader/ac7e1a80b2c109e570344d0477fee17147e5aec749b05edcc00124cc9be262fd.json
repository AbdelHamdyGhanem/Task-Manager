{"ast":null,"code":"// Arithmetic Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#arithmetic-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isArray, isNil, isNumber } from \"../../../util\";\n/**\n * Calculates the log of a number in the specified base and returns the result as a double.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $log = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  const msg = \"$log expression must resolve to array(2) of numbers\";\n  assert(isArray(args) && args.length === 2, msg);\n  if (args.some(isNil)) return null;\n  assert(args.some(isNaN) || args.every(isNumber), msg);\n  return Math.log10(args[0]) / Math.log10(args[1]);\n};","map":{"version":3,"names":["computeValue","assert","isArray","isNil","isNumber","$log","obj","expr","options","args","msg","length","some","isNaN","every","Math","log10"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/arithmetic/log.js"],"sourcesContent":["// Arithmetic Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#arithmetic-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isArray, isNil, isNumber } from \"../../../util\";\n/**\n * Calculates the log of a number in the specified base and returns the result as a double.\n *\n * @param obj\n * @param expr\n * @returns {number}\n */\nexport const $log = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    const msg = \"$log expression must resolve to array(2) of numbers\";\n    assert(isArray(args) && args.length === 2, msg);\n    if (args.some(isNil))\n        return null;\n    assert(args.some(isNaN) || args.every(isNumber), msg);\n    return Math.log10(args[0]) / Math.log10(args[1]);\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACxC,MAAMC,IAAI,GAAGT,YAAY,CAACM,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,MAAME,GAAG,GAAG,qDAAqD;EACjET,MAAM,CAACC,OAAO,CAACO,IAAI,CAAC,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAED,GAAG,CAAC;EAC/C,IAAID,IAAI,CAACG,IAAI,CAACT,KAAK,CAAC,EAChB,OAAO,IAAI;EACfF,MAAM,CAACQ,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,IAAIJ,IAAI,CAACK,KAAK,CAACV,QAAQ,CAAC,EAAEM,GAAG,CAAC;EACrD,OAAOK,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGM,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}