{"ast":null,"code":"export function lastOfArray(ar) {\n  return ar[ar.length - 1];\n}\n/**\n * @link https://stackoverflow.com/a/5915122\n */\nexport function randomOfArray(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\nexport function shuffleArray(arr) {\n  return arr.slice().sort(() => Math.random() - 0.5);\n}\n/**\n * normalizes sort-field\n * in: '-age'\n * out: 'age'\n */\nexport function normalizeSortField(field) {\n  if (field.startsWith('-')) {\n    return field.substr(1);\n  } else {\n    return field;\n  }\n}\nexport function getSortFieldsOfQuery(query) {\n  if (!query.sort) {\n    // if no sort-order is set, use the primary key\n    return ['_id'];\n  }\n  return query.sort.map(maybeArray => {\n    if (Array.isArray(maybeArray)) {\n      return maybeArray[0].map(field => normalizeSortField(field));\n    } else {\n      return normalizeSortField(maybeArray);\n    }\n  });\n}\n/**\n *  @link https://stackoverflow.com/a/1431113\n */\nexport function replaceCharAt(str, index, replacement) {\n  return str.substr(0, index) + replacement + str.substr(index + replacement.length);\n}\nexport function mapToObject(map) {\n  const ret = {};\n  map.forEach((value, key) => {\n    ret[key] = value;\n  });\n  return ret;\n}\nexport function objectToMap(object) {\n  const ret = new Map();\n  Object.entries(object).forEach(([k, v]) => {\n    ret.set(k, v);\n  });\n  return ret;\n}\nexport function cloneMap(map) {\n  const ret = new Map();\n  map.forEach((value, key) => {\n    ret[key] = value;\n  });\n  return ret;\n}\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone(obj) {\n  return Object.assign({}, obj);\n}\nexport function ensureNotFalsy(obj) {\n  if (!obj) {\n    throw new Error('ensureNotFalsy() is falsy');\n  }\n  return obj;\n}\nexport function mergeSets(sets) {\n  let ret = new Set();\n  sets.forEach(set => {\n    ret = new Set([...ret, ...set]);\n  });\n  return ret;\n}\n/**\n * @link https://stackoverflow.com/a/12830454/3443137\n */\nexport function roundToTwoDecimals(num) {\n  return parseFloat(num.toFixed(2));\n}\nexport function isObject(value) {\n  const type = typeof value;\n  return value !== null && (type === 'object' || type === 'function');\n}\nexport function getProperty(object, path, value) {\n  if (Array.isArray(path)) {\n    path = path.join('.');\n  }\n  if (!isObject(object) || typeof path !== 'string') {\n    return value === undefined ? object : value;\n  }\n  const pathArray = path.split('.');\n  if (pathArray.length === 0) {\n    return value;\n  }\n  for (let index = 0; index < pathArray.length; index++) {\n    const key = pathArray[index];\n    if (isStringIndex(object, key)) {\n      object = index === pathArray.length - 1 ? undefined : null;\n    } else {\n      object = object[key];\n    }\n    if (object === undefined || object === null) {\n      // `object` is either `undefined` or `null` so we want to stop the loop, and\n      // if this is not the last bit of the path, and\n      // if it didn't return `undefined`\n      // it would return `null` if `object` is `null`\n      // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n      if (index !== pathArray.length - 1) {\n        return value;\n      }\n      break;\n    }\n  }\n  return object === undefined ? value : object;\n}\nfunction isStringIndex(object, key) {\n  if (typeof key !== 'number' && Array.isArray(object)) {\n    const index = Number.parseInt(key, 10);\n    return Number.isInteger(index) && object[index] === object[key];\n  }\n  return false;\n}","map":{"version":3,"names":["lastOfArray","ar","length","randomOfArray","items","Math","floor","random","shuffleArray","arr","slice","sort","normalizeSortField","field","startsWith","substr","getSortFieldsOfQuery","query","map","maybeArray","Array","isArray","replaceCharAt","str","index","replacement","mapToObject","ret","forEach","value","key","objectToMap","object","Map","Object","entries","k","v","set","cloneMap","flatClone","obj","assign","ensureNotFalsy","Error","mergeSets","sets","Set","roundToTwoDecimals","num","parseFloat","toFixed","isObject","type","getProperty","path","join","undefined","pathArray","split","isStringIndex","Number","parseInt","isInteger"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/event-reduce-js/src/util.ts"],"sourcesContent":["import type {\n    MongoQuery,\n    DeepReadonlyObject\n} from './types/index.js';\n\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * @link https://stackoverflow.com/a/5915122\n */\nexport function randomOfArray<T>(items: T[]): T {\n    return items[Math.floor(Math.random() * items.length)];\n}\n\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.slice().sort(() => (Math.random() - 0.5));\n}\n\n/**\n * normalizes sort-field\n * in: '-age'\n * out: 'age'\n */\nexport function normalizeSortField(field: string): string {\n    if (field.startsWith('-')) {\n        return field.substr(1);\n    } else {\n        return field;\n    }\n}\n\nexport function getSortFieldsOfQuery(query: MongoQuery): string[] {\n    if (!query.sort) {\n        // if no sort-order is set, use the primary key\n        return ['_id'];\n    }\n    return query.sort.map(maybeArray => {\n        if (Array.isArray(maybeArray)) {\n            return maybeArray[0].map((field: any) => normalizeSortField(field));\n        } else {\n            return normalizeSortField(maybeArray);\n        }\n    });\n}\n\n/**\n *  @link https://stackoverflow.com/a/1431113\n */\nexport function replaceCharAt(str: string, index: number, replacement: string) {\n    return str.substr(0, index) + replacement + str.substr(index + replacement.length);\n}\n\nexport function mapToObject<K, V>(map: Map<K, V>): {\n    [k: string]: V\n} {\n    const ret: any = {};\n    map.forEach(\n        (value: V, key: K) => {\n            ret[key as any] = value;\n        }\n    );\n    return ret;\n}\n\nexport function objectToMap<K, V>(object: {\n    [k: string]: V\n}): Map<K, V> {\n    const ret = new Map();\n    Object.entries(object).forEach(([k, v]) => {\n        ret.set(k, v);\n    });\n    return ret;\n}\n\nexport function cloneMap<K, V>(map: Map<K, V>): Map<K, V> {\n    const ret: any = new Map();\n    map.forEach(\n        (value: V, key: K) => {\n            ret[key as any] = value;\n        }\n    );\n    return ret;\n}\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null): T {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\n\nexport function mergeSets<T>(sets: Set<T>[]): Set<T> {\n    let ret: Set<T> = new Set();\n    sets.forEach(set => {\n        ret = new Set([...ret, ...set]);\n    });\n    return ret;\n}\n\n/**\n * @link https://stackoverflow.com/a/12830454/3443137\n */\nexport function roundToTwoDecimals(num: number): number {\n    return parseFloat(num.toFixed(2));\n}\n\n\nexport function isObject(value: null) {\n    const type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n}\n\nexport function getProperty(object: any, path: string | string[], value?: any) {\n    if (Array.isArray(path)) {\n        path = path.join('.');\n    }\n\n    if (!isObject(object as any) || typeof path !== 'string') {\n        return value === undefined ? object : value;\n    }\n\n    const pathArray = path.split('.');\n    if (pathArray.length === 0) {\n        return value;\n    }\n\n    for (let index = 0; index < pathArray.length; index++) {\n        const key = pathArray[index];\n\n        if (isStringIndex(object as any, key as any)) {\n            object = index === pathArray.length - 1 ? undefined : null;\n        } else {\n            object = (object as any)[key];\n        }\n\n        if (object === undefined || object === null) {\n            // `object` is either `undefined` or `null` so we want to stop the loop, and\n            // if this is not the last bit of the path, and\n            // if it didn't return `undefined`\n            // it would return `null` if `object` is `null`\n            // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n            if (index !== pathArray.length - 1) {\n                return value;\n            }\n\n            break;\n        }\n    }\n\n    return object === undefined ? value : object;\n}\n\nfunction isStringIndex(object: any[], key: string) {\n    if (typeof key !== 'number' && Array.isArray(object)) {\n        const index = Number.parseInt(key, 10);\n        return Number.isInteger(index) && object[index] === object[key as any];\n    }\n\n    return false;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}