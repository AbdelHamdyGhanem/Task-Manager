{"ast":null,"code":"var _jsxFileName = \"/Users/abdelghanem/Desktop/task-manager/src/components/Home.js\";\nimport React from 'react';\nimport './Home.css'; // Import your CSS for Home component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  user\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Not Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), groupedTasks['Not Started'] && groupedTasks['Not Started'].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), groupedTasks['In Progress'] && groupedTasks['In Progress'].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Needs Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), groupedTasks['Needs Review'] && groupedTasks['Needs Review'].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), groupedTasks['Done'] && groupedTasks['Done'].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"User Profile\",\n        className: \"user-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user-name\",\n        children: user.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Home","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedTasks","map","task","title","id","src","photoURL","alt","displayName","_c","$RefreshReg$"],"sources":["/Users/abdelghanem/Desktop/task-manager/src/components/Home.js"],"sourcesContent":["import React from 'react';\nimport './Home.css'; // Import your CSS for Home component\n\nconst Home = ({ user }) => {\n  return (\n    <div className=\"home-container\">\n      <div className=\"content\">\n        <div className=\"progress-columns\">\n          <div className=\"column\">\n            <h3>Not Started</h3>\n            {groupedTasks['Not Started'] && groupedTasks['Not Started'].map(task => (\n              <div key={task.id} className=\"task\">\n                {task.title}\n              </div>\n            ))}\n          </div>\n          <div className=\"column\">\n            <h3>In Progress</h3>\n            {groupedTasks['In Progress'] && groupedTasks['In Progress'].map(task => (\n              <div key={task.id} className=\"task\">\n                {task.title}\n              </div>\n            ))}\n          </div>\n          <div className=\"column\">\n            <h3>Needs Review</h3>\n            {groupedTasks['Needs Review'] && groupedTasks['Needs Review'].map(task => (\n              <div key={task.id} className=\"task\">\n                {task.title}\n              </div>\n            ))}\n          </div>\n          <div className=\"column\">\n            <h3>Done</h3>\n            {groupedTasks['Done'] && groupedTasks['Done'].map(task => (\n              <div key={task.id} className=\"task\">\n                {task.title}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      {user && (\n        <div className=\"user-profile\">\n          <img src={user.photoURL} alt=\"User Profile\" className=\"user-avatar\" />\n          <span className=\"user-name\">{user.displayName}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}