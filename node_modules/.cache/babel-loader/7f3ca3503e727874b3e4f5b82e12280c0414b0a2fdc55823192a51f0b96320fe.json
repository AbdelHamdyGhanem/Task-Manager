{"ast":null,"code":"/**\n * String Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#string-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil, isString } from \"../../../util\";\n/**\n * Splits a string into substrings based on a delimiter.\n * If the delimiter is not found within the string, returns an array containing the original string.\n *\n * @param  {Object} obj\n * @param  {Array} expr\n * @return {Array} Returns an array of substrings.\n */\nexport const $split = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  if (isNil(args[0])) return null;\n  assert(args.every(isString), \"$split expression must result to array(2) of strings\");\n  return args[0].split(args[1]);\n};","map":{"version":3,"names":["computeValue","assert","isNil","isString","$split","obj","expr","options","args","every","split"],"sources":["/Users/abdelghanem/Desktop/tasker/node_modules/mingo/dist/esm/operators/expression/string/split.js"],"sourcesContent":["/**\n * String Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#string-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil, isString } from \"../../../util\";\n/**\n * Splits a string into substrings based on a delimiter.\n * If the delimiter is not found within the string, returns an array containing the original string.\n *\n * @param  {Object} obj\n * @param  {Array} expr\n * @return {Array} Returns an array of substrings.\n */\nexport const $split = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    if (isNil(args[0]))\n        return null;\n    assert(args.every(isString), \"$split expression must result to array(2) of strings\");\n    return args[0].split(args[1]);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,KAAK;EAC1C,MAAMC,IAAI,GAAGR,YAAY,CAACK,GAAG,EAAEC,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;EACnD,IAAIL,KAAK,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC,EACd,OAAO,IAAI;EACfP,MAAM,CAACO,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC,EAAE,sDAAsD,CAAC;EACpF,OAAOK,IAAI,CAAC,CAAC,CAAC,CAACE,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}